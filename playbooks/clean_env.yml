---
- name: clean environment
  hosts: all
  gather_facts: no

  vars_files:
    - ../vars/vars.yml

  tasks:
    - name: get all attached hds from vms
      ansible.builtin.shell: virsh domblklist {{ vm.name }} | tail -n +3 | awk '{ print $2 }'
      loop: "{{ vms }}"
      loop_control:
        loop_var: vm
      register: hds_exists

    - name: forced stop vms
      ansible.builtin.command:
        argv:
          - virsh
          - destroy
          - "{{ vm.name }}"
      loop: "{{ vms }}"
      loop_control:
        loop_var: vm
      ignore_errors: yes

    - name: remove all vms with attached storage 
      ansible.builtin.command:
        argv:
          - virsh
          - undefine
          - "{{ vm.name }}"
          - --remove-all-storage
      loop: "{{ vms }}"
      loop_control:
        loop_var: vm
      ignore_errors: yes

    - name: remove all vm networks
      community.libvirt.virt_net:
        name: "{{ vm_network.name }}"
        state: absent
      loop: "{{ vm_networks }}"
      loop_control:
        loop_var: vm_network

    - name: remove harddisks
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      loop: "{{ hds_exists.results | map(attribute='stdout_lines') | list | flatten }}"

    - name: remove generated ssh key
      community.crypto.openssh_keypair:
        path: "{{ ssh_key_file_name }}"
        state: absent
